-- קובץ אינטגרציה - חיבור מערכת Streaming Service עם מערכת ניהול התוכן
-- ========================================================================
-- הנחה: כל הטבלאות והנתונים כבר קיימים במערכת
--
-- רציונל האינטגרציה:
-- ===================
-- המטרה היא לחבר בין נתוני התנהגות המשתמשים (צפייה, דירוגים, מועדפים) 
-- לבין מידע מפורט על התוכן (ז'אנרים, פרסים, פרנצ'ייזים).
-- זה יאפשר ניתוחים עסקיים מתקדמים כמו:
-- - איזה ז'אנרים הכי רווחיים?
-- - האם תוכן עם פרסים מושך יותר צפיות?
-- - איך לפתח אסטרטגיית רכישת תוכן מבוססת נתונים?

-- שלב 1: יצירת החיבור בין המערכות
-- ===================================

-- 1. חיבור טבלת WatchHistory למערכת ניהול התוכן
-- ==============================================
-- מטרה: לאפשר ניתוח מעמיק של הרגלי צפייה לפי ז'אנרים, פרנצ'ייזים ופרסים
-- יתרונות: 
-- - אפשר לנתח איזה ז'אנרים הכי פופולריים
-- - אפשר לראות אם תוכן עם פרסים נצפה יותר
-- - אפשר להבין את הקשר בין איכות התוכן (פרסים) לזמן הצפייה
ALTER TABLE WatchHistory 
ADD CONSTRAINT fk_watchhistory_title 
FOREIGN KEY (movieID) REFERENCES Title(Title_ID);

-- 2. חיבור טבלת Favorites למערכת ניהול התוכן
-- ============================================
-- מטרה: להבין איזה סוגי תוכן נוטים להיות מועדפים יותר
-- יתרונות:
-- - ניתוח מועדפים לפי ז'אנר (האם אקשן פופולרי יותר מדרמה?)
-- - זיהוי פרנצ'ייזים מצליחים (האם MCU יוצר יותר מועדפים?)
-- - הבנת הקשר בין איכות (פרסים) להעדפות משתמשים
ALTER TABLE Favorites 
ADD CONSTRAINT fk_favorites_title 
FOREIGN KEY (movieID) REFERENCES Title(Title_ID);

-- 3. חיבור טבלת Reviews למערכת ניהול התוכן
-- =========================================
-- מטרה: לחבר בין דירוגי המשתמשים לבין מאפייני התוכן
-- יתרונות:
-- - ניתוח דירוגים לפי ז'אנר (איזה ז'אנרים מקבלים דירוגים גבוהים?)
-- - השוואת דירוגי משתמשים לפרסים מקצועיים
-- - זיהוי גורמי הצלחה (משך סרט, תאריך יציאה, וכו')
-- - אפשרות ליצור מערכת המלצות מתקדמת
ALTER TABLE Reviews 
ADD CONSTRAINT fk_reviews_title 
FOREIGN KEY (movieID) REFERENCES Title(Title_ID);

-- 4. חיבור טבלת MarksAsFavorite למערכת ניהול התוכן
-- ================================================
-- מטרה: לנתח את החיבור בין פרופילי משתמשים למאפייני התוכן שהם אוהבים
-- יתרונות:
-- - מערכת המלצות מבוססת ז'אנרים ופרנצ'ייזים
-- - זיהוי דפוסי התנהגות (פרופילים שאוהבים MCU אוהבים גם DC?)
-- - ניתוח קהל יעד לכל סוג תוכן
-- - אפשרות לפיתוח אסטרטגיית תוכן מותאמת אישית
ALTER TABLE MarksAsFavorite 
ADD CONSTRAINT fk_marksfavorite_title 
FOREIGN KEY (movieID) REFERENCES Title(Title_ID);

-- שלב 2: הסבר למה לא חיברתי טבלאות אחרות
-- ============================================
-- למה לא חיברתי את Customer למערכת החדשה?
-- -----------------------------------------------
-- Customer מכיל מידע אישי של הלקוח (שם, תאריך לידה) שלא קשור למאפייני התוכן.
-- החיבור צריך להיות רק בנקודות שבהן יש קשר לוגי בין נתוני התנהגות לתוכן.
--
-- למה לא חיברתי את Profile למערכת החדשה ישירות?
-- -----------------------------------------------------
-- Profile כבר מחובר לWatchHistory, כך שהחיבור קיים בעקיפין.
-- חיבור ישיר יוצר redundancy ועלול ליצור בעיות בשלמות הנתונים.
--
-- למה לא חיברתי את Devices או Payment?
-- ------------------------------------
-- Devices - מכיל מידע טכני על מכשירים, לא קשור לתוכן עצמו
-- Payment - מכיל מידע על תשלומים, לא קשור ישירות לתוכן ספציפי
--
-- למה בחרתי דווקא בחיבורים האלה?
-- ===============================
-- כל הטבלאות שבחרתי מכילות movieID - זה הקישור הטבעי לתוכן.
-- אלה הטבלאות היחידות שמתעסקות ישירות עם התוכן ולא עם משתמשים או תשלומים.
--
-- יתרונות עסקיים של החיבורים שבחרתי:
-- ===================================
-- 1. ניתוח ROI על תוכן - איזה ז'אנרים מביאים הכי הרבה צפיות?
-- 2. אסטרטגיית רכישה - האם לקנות יותר תוכן עם פרסים?
-- 3. מערכת המלצות חכמה - המלצות מבוססות ז'אנרים ולא רק היסטוריה
-- 4. זיהוי טרנדים - איזה פרנצ'ייזים עולים או יורדים בפופולריות?

-- שלב 3: בדיקת תקינות החיבור
-- ============================

-- בדיקה שהאילוצים נוצרו בהצלחה
SELECT 
    tc.constraint_name,
    tc.table_name,
    kcu.column_name,
    ccu.table_name AS foreign_table_name,
    ccu.column_name AS foreign_column_name
FROM information_schema.table_constraints AS tc
JOIN information_schema.key_column_usage AS kcu
    ON tc.constraint_name = kcu.constraint_name
    AND tc.table_schema = kcu.table_schema
JOIN information_schema.constraint_column_usage AS ccu
    ON ccu.constraint_name = tc.constraint_name
    AND ccu.table_schema = tc.table_schema
WHERE tc.constraint_type = 'FOREIGN KEY'
    AND tc.table_name IN ('watchhistory', 'favorites', 'reviews', 'marksasfavorite')
    AND ccu.table_name = 'title';

-- הודעת הצלחה
SELECT 'Integration completed successfully! The streaming service system is now connected to the content management system.' AS Status;
